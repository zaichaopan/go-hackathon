@model PagedList.IPagedList<Riipen_SSD.ViewModels.ParticipantViewModels.ParticipantContestVM>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}

<link href="~/Styles/ParticipantIndexResponsiveTable.css" rel="stylesheet" />
<link href="~/Styles/Judge_Participant.css" rel="stylesheet" />

@section scripts{
    <script src="~/JavaScript/Judge-Participant.js"></script>
}

<div class="header">
    <div class="searchForm">
        @using (Html.BeginForm("Index", "Participant", FormMethod.Get))
        {
            @Html.AntiForgeryToken()  
            <button type="submit" class="btn-search"><i class="fa fa-search" aria-hidden="true"></i></button>
            <input type="text" name="searchAContest" value="@ViewBag.searchStringValue" placeholder="Search"> <span class="searchIn">&nbsp;in contests</span>
        }
    </div>
 </div>


      
<div class="judge-participant-wrapper">

    <div class="dropdown" id="sortButton"style="margin-top:10px;margin-bottom:10px;float:right">
        Sort: <button class="btn btn-default btn-sm dropdown-toggle" type="button" id="sortMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
            @ViewBag.sortStringValue
            <span class="caret"></span>
        </button>
        <ul class="dropdown-menu" aria-labelledby="sortMenu">
            <li>@Html.ActionLink("Latest contests", "Index", new { searchAContest = ViewBag.searchStringValue, sortContests = "Latest" })</li>
            <li>@Html.ActionLink("Name", "Index", new { searchAContest = ViewBag.searchStringValue, sortContests = "Name" })</li>
            <li>@Html.ActionLink("Location", "Index", new { searchAContest = ViewBag.searchStringValue, sortContests = "Location" })</li>
        </ul>
    </div>

    @if (ViewBag.searchStringValue == "")
    {
        <div class="title">All contests</div>
    }
    else
    {
       
        <div class="title">Results for: @ViewBag.searchStringValue</div>
    }



    <table>
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.First().ContestName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().StartTime)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().Location)
                </th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>

                        @Html.ActionLink(item.ContestName, "Contests", new { contestID = item.ContestID })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Location)
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="PageDiv">

    <div style="float: right;">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</div>
        @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, searchAContest = ViewBag.searchStringValue, sortContests = ViewBag.sortStringValue }))
    </div>


    </div>

